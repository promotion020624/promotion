# Generated by Django 4.2.2 on 2024-06-02 09:09
from pickle import FALSE, TRUE
from django.contrib.auth.models import User
from django.contrib.auth.models import Group

from django.db import migrations
# Подключаем модуль для работы с датой/веременем
from datetime import datetime, timedelta
# Подключаем модкль генерации случайных чисел
import random


# Найти или Добавить Категорию
global dict_category
dict_category = {}

def get_category(apps, val):   
    # Поиск категории
    if val in dict_category.values():
        for k, v in dict_category.items():
            if v == val:
                return k    
    else:
        Category = apps.get_model("agency", "Category")
        category = Category()
        category.category_title = val
        category.save()
        dict_category[category.id] = category.category_title
        return category.id

# Добавить товар 
def insert_service(apps, param_service):   
    Service = apps.get_model("agency", "Service")
    service = Service()
    service.category_id = param_service[0]
    service.service_title = param_service[1]
    service.details = param_service[2]
    service.price = param_service[3]
    service.photo = param_service[4]
    service.save()
    return

# Добавить заявки клиента 
def insert_application(apps, param_application):   
    Application = apps.get_model("agency", "Application")
    application = Application()
    application.datea = param_application[0]
    application.user_id = param_application[1]
    application.application_title = param_application[2]
    application.application_details = param_application[3]
    application.save()
    application.datea = param_application[0]
    application.save()
    # Добавить движение заявки
    parameters = [application.id, application.datea, "Заявка принята", "Заявка принята в обработку"]
    insert_movement(apps, parameters)
    parameters = [application.id, application.datea + timedelta(days=1) + timedelta(minutes=random.randint(1, 240)), "Заявка в работе", "Заявка в работе"]
    insert_movement(apps, parameters)
    # Вероятность в %
    r = random.randrange(1, 100)
    if r > 50:
        parameters = [application.id, application.datea + timedelta(days=14) + timedelta(minutes=random.randint(1, 240)), "Заявка на стадии принятия работы заказчиком", "Заявка на стадии принятия работы заказчиком"]
        insert_movement(apps, parameters)
        if r > 75:
            parameters = [application.id, application.datea + timedelta(days=15) + timedelta(minutes=random.randint(1, 240)), "Заявка выполнена", "Заявка выполнена"]
            insert_movement(apps, parameters)
    return

# Добавить движение заявки клиента 
def insert_movement(apps, param_movement):   
    Movement = apps.get_model("agency", "Movement")
    movement = Movement()
    movement.application_id = param_movement[0]
    movement.datem = param_movement[1]
    movement.status = param_movement[2]
    movement.details = param_movement[3]
    movement.save()
    movement.datem = param_movement[1]
    movement.save()
    return

# Добавить продажи заявки клиента 
def insert_sale(apps, param_sale):   
    Sale = apps.get_model("agency", "Sale")
    sale = Sale()
    sale.application_id = param_sale[0]
    sale.dates = param_sale[1]
    sale.service_id = param_sale[2]
    sale.payment = param_sale[3]
    sale.save()
    sale.dates = param_sale[1]
    sale.save()
    return

# Добавить Новости
def insert_news(apps, param):
    News = apps.get_model("agency", "News")
    news = News()
    news.daten = param[0]
    news.news_title = param[1]
    news.details = param[2]
    news.photo = param[3]
    news.save()
    return 

# Начальные данные 
def new_data(apps, schema_editor):
    try:
        # Суперпользователь id=1
        user = User.objects.create_superuser(username='root',
        email='shop240524@mail.ru',
        first_name='Марат', 
        last_name='Баядилов',
        password='SsNn5678+-@', last_login=datetime.now())
        print("Суперпользователь создан")
    
        # Группа менеджеров
        managers = Group.objects.get_or_create(name = 'Managers')
        managers = Group.objects.get(name='Managers')
        print("Группа менеджеров создана")
    
        # Пользователь с ролью менеджера id=2
        user = User.objects.create_user(username='manager', password='Ss0066+-', email='manager@mail.ru', first_name='Алмат', last_name='Кужахметов', last_login=datetime.now())
        managers.user_set.add(user)
        print("Менеджер добавлен в группу менеджеров")

        # Простые пользователи (заявители) id3-22
        user = User.objects.create_user(username='user1', password='Uu0066+-', email='user1@mail.ru', first_name='Вадим', last_name='Воронцов', last_login=datetime.now())
        user = User.objects.create_user(username='user2', password='Uu0066+-', email='user2@mail.ru', first_name='Владимир', last_name='Кожанов', last_login=datetime.now())
        user = User.objects.create_user(username='user3', password='Uu0066+-', email='user3@mail.ru', first_name='Станислав', last_name='Самашинский', last_login=datetime.now())
        user = User.objects.create_user(username='user4', password='Uu0066+-', email='user4@mail.ru', first_name='Андрей', last_name='Ковганюк', last_login=datetime.now())
        user = User.objects.create_user(username='user5', password='Uu0066+-', email='user5@mail.ru', first_name='Борис', last_name='Перепелица', last_login=datetime.now())
        user = User.objects.create_user(username='user6', password='Uu0066+-', email='user6@mail.ru', first_name='Юлия', last_name='Фурман', last_login=datetime.now())
        user = User.objects.create_user(username='user7', password='Uu0066+-', email='user7@mail.ru', first_name='Дарья', last_name='Толстых', last_login=datetime.now())
        user = User.objects.create_user(username='user8', password='Uu0066+-', email='user8@mail.ru', first_name='Анастасия', last_name='Коршунова', last_login=datetime.now())
        user = User.objects.create_user(username='user9', password='Uu0066+-', email='user9@mail.ru', first_name='Ольга', last_name='Муравьева', last_login=datetime.now())
        user = User.objects.create_user(username='user10', password='Uu0066+-', email='user10@mail.ru', first_name='Роман', last_name='Когай', last_login=datetime.now())
        user = User.objects.create_user(username='user11', password='Uu0066+-', email='user11@mail.ru', first_name='Вячеслав', last_name='Федоров', last_login=datetime.now())
        user = User.objects.create_user(username='user12', password='Uu0066+-', email='user12@mail.ru', first_name='Антон', last_name='Корнеенков', last_login=datetime.now())
        user = User.objects.create_user(username='user13', password='Uu0066+-', email='user13@mail.ru', first_name='Светлана', last_name='Борисенко', last_login=datetime.now())
        user = User.objects.create_user(username='user14', password='Uu0066+-', email='user14@mail.ru', first_name='Екатерина', last_name='Рудич', last_login=datetime.now())
        user = User.objects.create_user(username='user15', password='Uu0066+-', email='user15@mail.ru', first_name='Алина', last_name='Увалиева', last_login=datetime.now())
        user = User.objects.create_user(username='user16', password='Uu0066+-', email='user16@mail.ru', first_name='Георгий', last_name='Соин', last_login=datetime.now())
        user = User.objects.create_user(username='user17', password='Uu0066+-', email='user17@mail.ru', first_name='Оксана', last_name='Гавва', last_login=datetime.now())
        user = User.objects.create_user(username='user18', password='Uu0066+-', email='user18@mail.ru', first_name='Галина', last_name='Ким', last_login=datetime.now())
        user = User.objects.create_user(username='user19', password='Uu0066+-', email='user19@mail.ru', first_name='Михаил', last_name='Востриков', last_login=datetime.now())
        user = User.objects.create_user(username='user20', password='Uu0066+-', email='user20@mail.ru', first_name='Артур', last_name='Орлов', last_login=datetime.now())
        print("Созданы простые пользователи")
        
                ##1 Каталог parameters - товар, (категория, название, описание, цена, фото)
        #parameters = [get_category(apps, "Категория"), "Название", """Описание""", 2000, "images/service01.jpg"]		
        #insert_service(apps, parameters)   

        #1 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Дизайн"), "Создание логотипа", """Логотип разрабатывается на основе заполненного брифа. Срок разработки составляет до пяти рабочих дней. На выбор предоставляется три варианта логотипа. Возможны 3 правки, а также добор цветовых сочетаний логотипа. После утверждения логотип предоставляется в форматах CDR, JPG, PNG, AI, EPS и PDF. Также вы можете подобрать логотип из готовых вариантов в нашем Супермаркете логотипов.""", 10000, "images/service01.jpg"]		
        insert_service(apps, parameters)   

        #2 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Дизайн"), "Создание фирменного стиля", """Если вы новая компания, то рано или поздно вам понадобится свой собственный фирменный стиль. Никаких типовых решений – только уникальный стиль, присущий только вам. Наше предложение по созданию фирменного стиля делится на четыре блока:
Стартап – только базовые вещи: логотип, визитки и фирменный бланк
Стандарт – к перечисленному выше добавляются входная группа, блокнот, конверт и ручка
Бизнес – также разрабатывается полный концепт полиграфической продукции и концепты кей-вижуалов для сайта и социальных сетей
Гранд – в дополнение разрабатывается концепт сувенирной продукции, брендирование автотранспорта, а также элементы фирменной одежды""", 10000, "images/service02.jpg"]		
        insert_service(apps, parameters)   

        #3 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Дизайн"), "Дизайн полиграфической продукции", """Дизайн визиток, листовок и многолистовой продукции позволит вам выделиться на фоне конкурентов. У нас имеются готовые решения, а также мы можем разработать для вас уникальный дизайн, сделав вашу продукцию не похожей ни на что другое. Дизайн в нашей компании идёт рука об руку с производством, поэтому в процессе разработки наши дизайнеры учтут все производственные моменты.""", 10000, "images/service03.jpg"]		
        insert_service(apps, parameters)   

        #4 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Сувенирная продукция"), "USB накопители, флешки", """На нашем складе в Алматы имеется огромный выбор usb-накопителей разных форм, материалов и ёмкостей – флешки из пластика, металла и даже дерева. Возможно изготовление флешек в необходимой форме. В качестве специального предложения у нас также имеются ручка с флешкой и ручка со стилусом и флешкой. Самыми популярными способами нанесения являются тампопечать и гравировка.""", 10000, "images/service04.jpg"]		
        insert_service(apps, parameters)   

        #5 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Сувенирная продукция"), "Головные уборы", """Кепки актуальны круглый год, тогда как в качестве новогодних подарков актуален комплект “шапка-шарф-перчатки”. Наиболее стильно на кепке смотрится вышивка, но возможны и другие методы нанесения. Для шапок хорошо подходят шевроны и шильды. Также в сегментах “строительство”, “монтажные работы” и “добыча” в качестве сувенирной продукции популярны каски, которые мы брендируем наклейкой или с помощью тампопечати.""", 5000, "images/service05.jpg"]		
        insert_service(apps, parameters)   

        #6 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Сувенирная продукция"), "Кружки", """Керамические кружки, а также тренд прошлого года – кружки из металла – не теряют актуальности никогда. В дополнение к кружкам необычных форм и цветов мы можем предложить кружку FUN, дополненную силиконовым дном различных цветов, за счёт чего возможна дополнительная индивидуализация. Для керамических кружек самый популярный вид нанесения – деколь.""", 1500, "images/service06.jpg"]		
        insert_service(apps, parameters)   

        #7 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Наружная реклама"), "Roll Up", """Выставочные мобильные стенды Roll Up – незаменимая вещь во время мероприятий и выставок. Полноценная рекламная конструкция 80 см * 200 см, упакованная в удобный переносной тубус с высококачественной печатью и сменными полотнами – двойная выгода.""", 12000, "images/service07.jpg"]		
        insert_service(apps, parameters)   

        #8 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Наружная реклама"), "Печать на баннере", """Печать на баннере – самый популярный вид наружной печати. Вывески, объявления и многое другое подвластны этому вездесущему материалу. Прошивка и люверсы по желанию. Если же вам нужна услуга монтажа в Алматы, то наша команда высокопрофессиональных монтажников к вашим услугам.""", 13000, "images/service08.jpg"]		
        insert_service(apps, parameters)   

        #9 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Офсетная полиграфия"), "Pop-up буклеты", """Полиграфическая продукция, дополненная pop-up конструкцией, заставит даже самого искушённого знатока взять ваш буклет в руки, чтобы насладиться объёмом. В качестве объёмного элемента может выступать ваш логотип, элементы фирменного стиля или даже кей-вижуалы.""", 1000, "images/service09.jpg"]		
        insert_service(apps, parameters)   

        #10 Каталог parameters - товар, (категория, название, описание, цена, фото)
        parameters = [get_category(apps, "Офсетная полиграфия"), "Настенный календарь", """Настенный календарь менее громоздок и сложен в производстве, нежели квартальный календарь, за счёт чего можно за меньший бюджет добиться практически того же эффекта, что и за счёт квартального календаря. Настенные календари могут быть как альбомной, так и книжной ориентации, а также могут быть интересной формы.""", 2000, "images/service10.jpg"]		
        insert_service(apps, parameters)   

        print("Созданы Каталог услуг")

        # Заявки #1
        parameters = [datetime.now() - timedelta(days=30) + timedelta(minutes=random.randint(1, 240)), 3, """Создание логотипа и фирменного стиля""", """Создание логотипа и фирменного стиля"""]
        insert_application(apps, parameters)
        parameters = [1, datetime.now() - timedelta(days=29) + timedelta(minutes=random.randint(1, 240)), 1, 15000]
        insert_sale(apps, parameters)
        parameters = [1, datetime.now() - timedelta(days=29) + timedelta(minutes=random.randint(1, 240)), 2, 15000]
        insert_sale(apps, parameters)

        # Заявки #2
        parameters = [datetime.now() - timedelta(days=29) + timedelta(minutes=random.randint(1, 240)), 4, """Дизайн полиграфической продукции""", """Дизайн полиграфической продукции"""]
        insert_application(apps, parameters)
        parameters = [2, datetime.now() - timedelta(days=28) + timedelta(minutes=random.randint(1, 240)), 3, 15000]
        insert_sale(apps, parameters)

        # Заявки #3
        parameters = [datetime.now() - timedelta(days=28) + timedelta(minutes=random.randint(1, 240)), 5, """Дизайн полиграфической продукции, сувениры""", """Дизайн полиграфической продукции, сувениры"""]
        insert_application(apps, parameters)
        parameters = [3, datetime.now() - timedelta(days=27) + timedelta(minutes=random.randint(1, 240)), 3, 15000]
        insert_sale(apps, parameters)
        parameters = [3, datetime.now() - timedelta(days=27) + timedelta(minutes=random.randint(1, 240)), 4, 17000]
        insert_sale(apps, parameters)

        # Заявки #4
        parameters = [datetime.now() - timedelta(days=27) + timedelta(minutes=random.randint(1, 240)), 6, """Создание сувениров""", """Создание сувениров"""]
        insert_application(apps, parameters)
        parameters = [4, datetime.now() - timedelta(days=27) + timedelta(minutes=random.randint(1, 240)), 4, 20000]
        insert_sale(apps, parameters)

        # Заявки #5
        parameters = [datetime.now() - timedelta(days=26) + timedelta(minutes=random.randint(1, 240)), 7, """Создание сувениров""", """Создание сувениров"""]
        insert_application(apps, parameters)
        parameters = [5, datetime.now() - timedelta(days=25) + timedelta(minutes=random.randint(1, 240)), 5, 20000]
        insert_sale(apps, parameters)
        parameters = [5, datetime.now() - timedelta(days=25) + timedelta(minutes=random.randint(1, 240)), 6, 18000]
        insert_sale(apps, parameters)

        # Заявки #6
        parameters = [datetime.now() - timedelta(days=25) + timedelta(minutes=random.randint(1, 240)), 8, """Сувенирные кружки""", """Сувенирные кружки"""]
        insert_application(apps, parameters)
        parameters = [6, datetime.now() - timedelta(days=24) + timedelta(minutes=random.randint(1, 240)), 6, 18000]
        insert_sale(apps, parameters)

        # Заявки #7
        parameters = [datetime.now() - timedelta(days=24) + timedelta(minutes=random.randint(1, 240)), 9, """Наружная реклама""", """Наружная реклама"""]
        insert_application(apps, parameters)
        parameters = [7, datetime.now() - timedelta(days=23) + timedelta(minutes=random.randint(1, 240)), 7, 25000]
        insert_sale(apps, parameters)
        parameters = [7, datetime.now() - timedelta(days=23) + timedelta(minutes=random.randint(1, 240)), 8, 30000]
        insert_sale(apps, parameters)

        # Заявки #8
        parameters = [datetime.now() - timedelta(days=23) + timedelta(minutes=random.randint(1, 240)), 10, """Рекламные работы""", """Рекламные работы"""]
        insert_application(apps, parameters)
        parameters = [8, datetime.now() - timedelta(days=22) + timedelta(minutes=random.randint(1, 240)), 7, 45000]
        insert_sale(apps, parameters)
        parameters = [8, datetime.now() - timedelta(days=22) + timedelta(minutes=random.randint(1, 240)), 8, 21000]
        insert_sale(apps, parameters)

        # Заявки #9
        parameters = [datetime.now() - timedelta(days=22) + timedelta(minutes=random.randint(1, 240)), 11, """Печать буклетов""", """Печать буклетов"""]
        insert_application(apps, parameters)
        parameters = [9, datetime.now() - timedelta(days=21) + timedelta(minutes=random.randint(1, 240)), 9, 18000]
        insert_sale(apps, parameters)

        # Заявки #10
        parameters = [datetime.now() - timedelta(days=21) + timedelta(minutes=random.randint(1, 240)), 12, """Настенные клаендари""", """Настенные клаендари"""]
        insert_application(apps, parameters)
        parameters = [10, datetime.now() - timedelta(days=20) + timedelta(minutes=random.randint(1, 240)), 10, 18000]
        insert_sale(apps, parameters)
        
        print("Созданы Заявки")

        #Новости
        #parameters = [datetime.now() - timedelta(days=10) + timedelta(minutes=random.randint(1, 240)), "Заголовок", """Детали""", "images/news1.jpg" ]
        #insert_news(apps, parameters)
        
        parameters = [datetime.now() - timedelta(days=10) + timedelta(minutes=random.randint(1, 240)), "С бизнесменов незаконно взимали налоги на рекламу в Алматинской области", """Прокуроры выявили факты незаконного взимания налогов органами государственных доходов на рекламу у субъектов предпринимательства. Отмечается, что в законе "О рекламе" четко определены виды рекламы и к ним не относятся вывески.
"Однако местные исполнительные органы направляли в фискальные органы сведения о наличии рекламы у субъектов бизнеса, в том числе в этот список включали и вывески. Подобные нарушения допущены в отношении 220 предпринимателей, по внесенному акту надзора прокуратуры на сегодняшний день уже более 60 предпринимателям незаконно уплаченные суммы выставлены на лицевые счета в виде переплаты", - говорится в сообщении.
В прокуратуре разъяснили, что, согласно пункту 1-1 статьи 11 закона "О рекламе", вывески не относятся к наружной рекламе и за них не начисляются налоговые платежи.""", "images/news1.jpg" ]
        insert_news(apps, parameters)
        
        parameters = [datetime.now() - timedelta(days=9) + timedelta(minutes=random.randint(1, 240)), "Казахстанцев будут штрафовать за фейки и обяжут маркировать рекламу в соцсетях", """Сегодня в Мажилисе прошло обсуждение проекта закона "Об онлайн-платформах и онлайн-рекламе". О новеллах данного законопроекта рассказал депутат Анас Баккожаев
Законопроект устанавливает права и обязанности онлайн-платформ и блогеров. В частности наряду с действующей уголовной ответственностью предполагается ввести административную ответственность за распространение в сети фейковой информации. Для обычных пользователей онлайн-платформ штраф составит 20 МРП (69 тысяч тенге в 2023 году), тогда как для блогеров, занимающихся предпринимательской деятельностью, - 40 МРП (138 тысяч тенге в 2023 году).
В интерфейсы и модерацию онлайн-площадок собираются ввести национальный язык. Это позволит алгоритмам соцсетей модерировать контент на казахском языке.
Также владельцев онлайн-площадок обяжут сотрудничать с государственными органами в борьбе с недостоверной информацией и уклонением от уплаты налогов.
"Для этого вводится требование установить программу по определению количества пользователей данного ресурса в сети Интернет и назначить законного представителя, взаимодействующего с местным уполномоченным органом. В случае обнаружения противоправного контента на онлайн-платформах законный представитель будет уведомлен о необходимости его удаления. При несоблюдении данного требования уполномоченный орган вправе ограничить деятельность онлайн-платформы", - разъяснил механизм Баккожаев.
Также для пользователей интернет-площадок появится требование маркировать интернет-рекламу, размещаемую на их страницах, и в целом вести свою деятельность в соответствии с предпринимательским кодексом.""", "images/news2.jpg" ]
        insert_news(apps, parameters)
        
        parameters = [datetime.now() - timedelta(days=8) + timedelta(minutes=random.randint(1, 240)), "870 несогласованных вывесок демонтировали в Астане", """В акимате Астане заявили, что продолжают упорядочивать наружную рекламу и вывески в соответствии с утвержденным в 2019 году дизайн-кодом столицы.
"На сегодня демонтированы 870 рекламных элементов, которые не соответствовали утвержденному дизайн-коду. Для устранения подобных нарушений собственникам малого и среднего бизнеса раздаются уведомления о приведении в соответствие наружной рекламы", - сообщается на сайте городского акимата.""", "images/news3.jpg" ]
        insert_news(apps, parameters)
        
        parameters = [datetime.now() - timedelta(days=7) + timedelta(minutes=random.randint(1, 240)), "\"Медиарынок может откатиться назад\". Рекламная ассоциация просит обратить внимание на перемены в отрасли", """Медиарынок Казахстана может откатиться в развитии на несколько лет назад. Члены Центрально-Азиатской рекламной ассоциации, в которую входят ведущие СМИ Казахстана, подписали обращение к Президенту Касым-Жомарту Токаеву. 
Члены ассоциации просят обратить внимание на грядущие перемены в отрасли и призывают включить представителей медиарынка в рабочую группу Мажилиса, которая рассматривает возможность запрета рекламы букмекерских контор и безрецептурных препаратов в СМИ.
Представители медиаиндустрии предлагают ввести только частичные ограничения в рекламе букмекерских компаний и безрецептурных лекарств. Полный запрет на рекламу, как ожидают в ассоциации, приведет к многомиллиардным убыткам - доходы медиарынка упадут на треть.
"Те ограничения, которые хотят ввести, не совсем верно, на наш взгляд, оценены с точки зрения пользы для общества. Поэтому мы хотим, чтобы для обсуждения пригласили экспертов, профессионалов медийной индустрии, чтобы действительно четко и адекватно взвесить пользу от этих ограничений и вред, который они могут нанести", - пояснила позицию ассоциации исполнительный директор Анна Тютькова.
Вместо полного запрета эксперты предлагают транслировать рекламные ролики в ночное время, чтобы не охватывать подростковую аудиторию, а также не допускать фразы о гарантированных выигрышах, успешном результате лечения.
"Влияет ли это (возможный запрет рекламы) как-то на потребление? Нет, это влияет на перераспределение. Сейчас говорят о запрете рекламы от фармацевтов. Куда уйдут все эти деньги, которые фармацевты тратили на телевидение? Они уйдут в интернет или к провизору в аптеку. Вы, приходя в аптеку, не увидите рекламу от кашля по телевизору, которую много раз проверили, проверило Министерство здравоохранения, соответствующие ведомства. А вам провизор будет говорить: "Вот это лекарство хорошее, а вот это - не очень". Или врачи будут вам говорить. Хорошо это или плохо - очень сложно сказать", - отметил гендиректор рекламной компании "VI Казахстан" Ильмурад Джумаев.
По оценке экспертного совета ЦАРА, в случае полного запрета рекламы букмекерских компаний и безрецептурных препаратов медиарынок потеряет до 25 млрд тенге в год. Это, как считают в ассоциации, неминуемо приведет к стагнации всего медиарынка, а затем и к падению, в том числе и качества производимого контента.""", "images/news4.jpg" ]
        insert_news(apps, parameters)
        
        parameters = [datetime.now() - timedelta(days=6) + timedelta(minutes=random.randint(1, 240)), "В сети пародируют рекламный ролик популярного у казахстанцев бренда", """Последнюю пару недель в сети громко обсуждается рекламный ролик Calvin Klein с участием актера Джереми Аллена Уайта. Знаменитость покорила пользовательниц TikTok, а вот парни запустили собственный тренд. Они пытаются повторить движения звезды сериалов "Бесстыжие" и "Медведь". 
Ролик, где артист занимается физическими упражнениями под трек "You Don’t Own Me", собрал почти 3,5 миллиона просмотров. В рекламе актер появился на крыше одной из высоток Нью-Йорка в нижнем белье. Реклама привела в восторг поклонниц актера, а самого Джереми они назвали секс-символом 2024 года.
Девушки принялись массово делать репосты, а мужчины, воспользовавшись ажиотажем, запустили собственный тренд. Молодые люди начали снимать видео под эту песню, а кое-кто подошел к делу серьезно, попытавшись точь-в-точь повторить креативный ролик.""", "images/news5.jpg" ]
        insert_news(apps, parameters)
        
        parameters = [datetime.now() - timedelta(days=5) + timedelta(minutes=random.randint(1, 240)), "В Казахстане вступают в силу новые правила, касающиеся рекламы в интернете", """Закон "Об онлайн-платформах и онлайн-рекламе" подписан Главой государства 10 июля 2023 года. Документ направлен на формирование в Казахстане безопасной онлайн-среды. Одним из ключевых правовых механизмов, отраженных в нем, является обязательство по маркировке онлайн-рекламы.
По словам министра культуры и информации Аиды Балаевой, правила маркировки сформированы на основе международного опыта и прошли положительную оценку в вопросе их воздействия на бизнес.
"Формируя данные правила, мы опирались на опыт медиасубъектов, самостоятельно маркирующих контент, размещаемый на коммерческой основе. Мы выступаем за расширение этой здоровой тенденции на все онлайн-пространство Казахстана. Правила вступят в силу 2 марта", - подчеркнула министр.
В соответствии с правилами маркировке подлежит онлайн-реклама, размещаемая инфлюенсерами (блогерами) на коммерческой или договорной основе. Для маркировки в начале или в конце публикации необходимо указать одну из следующих формулировок, активно использующихся в онлайн-среде: "реклама", "рекламный материал", "партнерский материал", "спонсорский материал", "на правах рекламы", "оплачено спонсором", "на правах PR".
Маркировать социальную рекламу, направленную на достижение благотворительных и иных общественно полезных целей некоммерческого характера, и рекламу, размещенную на сервисе обмена мгновенными сообщениями (мессенджеры), не нужно.""", "images/news6.jpg" ]
        insert_news(apps, parameters)
        
        parameters = [datetime.now() - timedelta(days=4) + timedelta(minutes=random.randint(1, 240)), "Жесткие ограничения по рекламе букмекеров введут в Казахстане: подробности", """Казахстанские блогеры больше не смогут рекламировать букмекерские платформы и онлайн-казино. Соответствующие поправки содержатся в законопроекте по вопросам игорного бизнеса, лотерей и лотерейной деятельности,
Депутаты Мажилиса в первом чтении рассматривают новый законопроект, направленный на регулирование деятельности игорного бизнеса.
Как сообщил депутат Елнур Бейсенбаев, блогерам наряду с остальными казахстанцами запретят рекламировать букмекеров и онлайн-казино.
"Никакой известный блогер или известный гражданин через социальные сети не сможет рекламировать букмекерские конторы, казино. У них не будет такого права. В КоАП вносится специальная норма и предусматривается штраф в размере 60 МРП (221 520 тенге в 2024 году)", - рассказал Бейсенбаев на пленарном заседании Мажилиса.
Он отметил, что блогеры могут посещать спортивные мероприятия и освещать их в своих социальных сетях, но рекламировать букмекерские конторы или казино - нет.""", "images/news7.jpg" ]
        insert_news(apps, parameters)

        print("Созданы Новости")

    except Exception as error:
        print(error)



class Migration(migrations.Migration):


    dependencies = [
        ('agency', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(new_data),
#        # PostgreSQL
#        migrations.RunSQL("""CREATE  VIEW view_application AS
# SELECT application.id, application.datea, application.user_id, auth_user.username, auth_user.first_name, auth_user.last_name, auth_user.email, application.application_title, application.application_details,
#( SELECT (to_char(movement.datem, 'DD.MM.YYYY HH24:MI:SS'::text) || ' - '::text) || movement.status::text
#        FROM movement
#        WHERE movement.application_id = application.id
#        ORDER BY movement.datem DESC
#        LIMIT 1) AS final,
#( SELECT sum(sale.payment) AS sum
#        FROM sale
#        WHERE sale.application_id = application.id) AS total
#FROM application
#LEFT JOIN auth_user ON application.user_id = auth_user.id;
#"""),
#        # SQLite
#        migrations.RunSQL("""CREATE VIEW view_application AS
#SELECT application.id, application.datea, application.user_id, auth_user.username, auth_user.first_name, auth_user.last_name, auth_user.email, application.application_title, application.application_details,
#(SELECT strftime('%d.%m.%Y %H:%M:%S',datem) || ' - ' ||  status FROM movement WHERE application_id = application.id ORDER BY datem DESC LIMIT 1) AS final,
#(SELECT SUM(payment) FROM sale WHERE sale.application_id = application.id) AS total
#FROM application
#LEFT JOIN auth_user ON application.user_id=auth_user.id"""),

    ]

